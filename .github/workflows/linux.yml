name: linux

on: [push]

jobs:
  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # 18.04 supports CUDA 10.1+ (gxx <= 8)
          #- os: ubuntu-18.04
          #  cuda: "10.1"
          #  gcc: 8
          # 16.04 supports CUDA 8+
          - os: ubuntu-16.04
            cuda: "10.1"
            gcc: 7
          #- os: ubuntu-16.04
          #  cuda: "9.2"
          #  gcc: 7
          #- os: ubuntu-16.04
          #  cuda: "9.1"
          #  gcc: 6
      max-parallel: 5
    env:
      build_dir: "build"
      config: "Release"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    # Specify the correct host compilers
    - name: Install/Select gcc and g++
      run: |
        sudo apt-get install -y gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
        echo "CC=/usr/bin/gcc-${{ matrix.gcc }}" >> $GITHUB_ENV
        echo "CXX=/usr/bin/g++-${{ matrix.gcc }}" >> $GITHUB_ENV
    - name: Configure cmake
      id: configure
      run: cmake . -B ${{ env.build_dir }} -DCMAKE_BUILD_TYPE=${{ env.config }}

    - name: Configure Error Processing
      if: ${{ failure() && steps.configure.outcome == 'failure' }}
      working-directory: ${{ env.build_dir }}
      run: |
          if [[ -f "CMakeFiles/CMakeOutput.log" ]]; then
            echo "---- CMakeFiles/CMakeOutput.log"
            cat CMakeFiles/CMakeOutput.log
            echo "----"
          fi
          if [[ -f "CMakeFiles/CMakeError.log" ]]; then
            echo "---- CMakeFiles/CMakeError.log"
            cat CMakeFiles/CMakeError.log
            echo "----"
          fi

    - name: Install dependencies in conda environment
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        $CONDA/bin/conda env update --file ./install/savu_hpc/savu_installer/environment.yml --name base

    - name: Lint with flake8
      run: |
        $CONDA/bin/conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        $CONDA/bin/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        $CONDA/bin/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install additional conda packages
      run: |
        conda install --yes conda-build anaconda-client setuptools

    #- name: Test with pytest
    #  run: |
    #    conda install pytest
    #    $CONDA/bin/pytest ./savu/test/travis/
